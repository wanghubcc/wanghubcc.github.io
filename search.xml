<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>centos做代理中转</title>
      <link href="/archives/f8ebd115.html"/>
      <url>/archives/f8ebd115.html</url>
      
        <content type="html"><![CDATA[<h1 id="centos做代理中转"><a href="#centos做代理中转" class="headerlink" title="centos做代理中转"></a>centos做代理中转</h1><p>使用 <a href="https://github.com/nadoo/glider">glider</a> 做代理中转，可以把有账号密码的代理转为没有账号密码的代理</p><blockquote><p>glider 是一个支持多种协议的转发代理，也是一个具有 ipset 管理功能（如 dnsmasq）的 dns/dhcp 服务器 <br>我们可以将本地侦听器设置为代理服务器，并通过转发器将请求转发到互联网。</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">             |Forwarder -----------------&gt;|Listener --&gt; |                            | Internet             |Forwarder --&gt; Forwarder-&gt;...|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>解压直接使用，并对外暴露服务端口</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#运行程序[root@node4 glider_0.13.2_linux_amd64]# ./glider -forward http://账号:密码@http-dyn.abuyun.com:9020   --listen :11000 -verbose2021/04/27 09:27:44 group.go:182: [group] only 1 forwarder found, disable health checking2021/04/27 09:27:44 mixed.go:68: [mixed] listening TCP on :80812021/04/27 09:27:44 server.go:105: [socks5] listening UDP on :8081#应用请求结果：2021/04/27 09:31:47 server.go:162: [http] 172.110.110.1:26447 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:31:48 server.go:162: [http] 172.110.110.1:26448 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:31:49 server.go:162: [http] 172.110.110.1:26459 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:31:49 server.go:162: [http] 172.110.110.1:26460 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:31:50 server.go:162: [http] 172.110.110.1:26465 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:31:51 server.go:162: [http] 172.110.110.1:26466 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:33:32 server.go:162: [http] 172.110.110.1:26574 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:33:34 server.go:162: [http] 172.110.110.1:26579 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:90202021/04/27 09:33:35 server.go:162: [http] 172.110.110.1:26582 &lt;-&gt; ip.3322.net:80 via http-dyn.abuyun.com:9020<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 代理 </tag>
            
            <tag> 代理转发 </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos断网环境下安装chrome</title>
      <link href="/archives/3318b66c.html"/>
      <url>/archives/3318b66c.html</url>
      
        <content type="html"><![CDATA[<h1 id="centos断网环境下安装chrome"><a href="#centos断网环境下安装chrome" class="headerlink" title="centos断网环境下安装chrome"></a>centos断网环境下安装chrome</h1><h2 id="离线缓存所有依赖包"><a href="#离线缓存所有依赖包" class="headerlink" title="离线缓存所有依赖包"></a>离线缓存所有依赖包</h2><h3 id="修改yum设置，让rpm包缓存到本地"><a href="#修改yum设置，让rpm包缓存到本地" class="headerlink" title="修改yum设置，让rpm包缓存到本地"></a>修改yum设置，让rpm包缓存到本地</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#修改yum设置，让rpm包缓存到本地vi /etc/yum.conf#修改keepcache为1keepcache=1#清空yum缓存yum clean all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装chrome"><a href="#安装chrome" class="headerlink" title="安装chrome"></a>安装chrome</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#写入源vi /etc/yum.repos.d/google-chrome.repo[google-chrome]name=google-chromebaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64enabled=1gpgcheck=1gpgkey=https://dl.google.com/linux/linux_signing_key.pub#安装yum -y install google-chrome-stable --nogpgcheck<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/wanghubcc/img/202108/18/ddf921379399625b9342863230cbbc.png" alt="安装成功提示"></p><h3 id="复制缓存的依赖包"><a href="#复制缓存的依赖包" class="headerlink" title="复制缓存的依赖包"></a>复制缓存的依赖包</h3><p><img src="https://cdn.jsdelivr.net/gh/wanghubcc/img/202108/18/ac230e5be8d7a22f150ddb98704e9c.png" alt="缓存依赖包位置"><br><img src="https://cdn.jsdelivr.net/gh/wanghubcc/img/202108/18/511b04931124416801a69743c48562.png" alt="全部打包"><br><a href="https://github.com/wanghubcc/file01/releases/download/google-chrome-92/google-chrome-all.zip">打包好的centos7_chrome_v92</a></p><h2 id="把所有的依赖包上传至断网机器"><a href="#把所有的依赖包上传至断网机器" class="headerlink" title="把所有的依赖包上传至断网机器"></a>把所有的依赖包上传至断网机器</h2><h3 id="切换到依赖包目录下"><a href="#切换到依赖包目录下" class="headerlink" title="切换到依赖包目录下"></a>切换到依赖包目录下</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#强制安装所有依赖rpm -ivh *.rpm --nodeps --force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>联网的机器安装成功，这里就没问题</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#验证[root@node4 packages]# google-chrome -versionGoogle Chrome 92.0.4515.131 [root@node4 packages]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式整理</title>
      <link href="/archives/70d9e353.html"/>
      <url>/archives/70d9e353.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用正则表达式整理"><a href="#常用正则表达式整理" class="headerlink" title="常用正则表达式整理"></a>常用正则表达式整理</h1><h3 id="提取中文"><a href="#提取中文" class="headerlink" title="提取中文"></a>提取中文</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[\u4E00-\u9FFF]+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/wanghubcc/img/202108/16/26a290b67a6e4b5c12f16897daf7e2.png" alt="示例"></p><h3 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">一、校验数字的表达式数字：^[0-9]*$n位的数字：^\d{n}$至少n位的数字：^\d{n,}$m-n位的数字：^\d{m,n}$零和非零开头的数字：^(0|[1-9][0-9]*)$非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(\.[0-9]{1,2})?$带1-2位小数的正数或负数：^(\-)?\d+(\.\d{1,2})$正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$有两位小数的正实数：^[0-9]+(\.[0-9]{2})?$有1~3位小数的正实数：^[0-9]+(\.[0-9]{1,3})?$非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\+?[1-9][0-9]*$非零的负整数：^\-[1-9][]0-9"*$ 或 ^-[1-9]\d*$非负整数：^\d+$ 或 ^[1-9]\d*|0$非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$校验字符的表达式汉字：^[\u4e00-\u9fa5]{0,}$英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$长度为3-20的所有字符：^.{3,20}$由26个英文字母组成的字符串：^[A-Za-z]+$由26个大写英文字母组成的字符串：^[A-Z]+$由26个小写英文字母组成的字符串：^[a-z]+$由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$可以输入含有^%&amp;',;=?$\"等字符：[^%&amp;',;=?$\x22]+禁止输入含有~的字符：[^~\x22]+三、特殊需求表达式Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\.?InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|4|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7}电话号码正则表达式（支持手机号码，3-4位区号，7-8位直播号码，1－4位分机号）: ((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)身份证号(15位、18位数字)，最后一位是校验位，可能为数字或字符X：(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 8-10 之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,10}$强密码(必须包含大小写字母和数字的组合，可以使用特殊字符，长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$日期格式：^\d{4}-\d{1,2}-\d{1,2}一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$钱的输入格式：有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：^[1-9][0-9]*$这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧。下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：^[0-9]+(.[0-9]{2})?$这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$备注：这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$中文字符的正则表达式：[\u4e00-\u9fa5]双字节字符：[^\x00-\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))空白行的正则表达式：\n\s*\r (可以用来删除空白行)HTML标记的正则表达式：&lt;(\S*?)[^&gt;]*&gt;.*?|&lt;.*? /&gt; ( 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)中国邮政编码：[1-9]\d{5}(?!\d) (中国邮政编码为6位数字)IPv4地址：((2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2})(\.((2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2})){3}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装postgres</title>
      <link href="/archives/7c4d3618.html"/>
      <url>/archives/7c4d3618.html</url>
      
        <content type="html"><![CDATA[<h1 id="docker安装postgres"><a href="#docker安装postgres" class="headerlink" title="docker安装postgres"></a>docker安装postgres</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#拉取镜像docker pull postgres#启动docker run --name some-postgres -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d postgres<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> docker </tag>
            
            <tag> postgres </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装zookeeper</title>
      <link href="/archives/9b20e9d.html"/>
      <url>/archives/9b20e9d.html</url>
      
        <content type="html"><![CDATA[<h1 id="docker安装zookeeper"><a href="#docker安装zookeeper" class="headerlink" title="docker安装zookeeper"></a>docker安装zookeeper</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#拉取镜像docker pull zookeeper#创建挂载文件夹mkdir -p /opt/zook#启动容器docker run -d -v /opt/zook:/data -v /opt/zook:/datalog  -e ZOO_MY_ID=1 -e ZOO_SERVERS='server.1=172.110.110.101:2888:3888'  --net=host --name zookeeper --privileged zookeeper#设置容器开机自启docker update zookeeper --restart=always<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> docker </tag>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装mysql</title>
      <link href="/archives/25ae9841.html"/>
      <url>/archives/25ae9841.html</url>
      
        <content type="html"><![CDATA[<h1 id="docker安装mysql"><a href="#docker安装mysql" class="headerlink" title="docker安装mysql"></a>docker安装mysql</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#拉取镜像docker pull mysql:5.7# --name指定容器名字 -v目录挂载 -p指定端口映射  -e设置mysql参数 -d后台运行 -m限制内存使用docker run -p 3306:3306 --name mysql \-v /mydata/mysql/log:/var/log/mysql \-v /mydata/mysql/data:/var/lib/mysql \-v /mydata/mysql/conf:/etc/mysql \-m 200m \-e MYSQL_ROOT_PASSWORD=123456 \-d mysql:5.7#修改配置文件vi /mydata/mysql/conf/my.conf [client]default-character-set=utf8[mysql]default-character-set=utf8[mysqld]init_connect='SET collation_connection = utf8_unicode_ci'init_connect='SET NAMES utf8'character-set-server=utf8collation-server=utf8_unicode_ciskip-character-set-client-handshakeskip-name-resolve#重启服务docker restart mysql#设置容器开机自启docker update mysql --restart=always<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> docker </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装</title>
      <link href="/archives/327177db.html"/>
      <url>/archives/327177db.html</url>
      
        <content type="html"><![CDATA[<h1 id="centos7安装docker"><a href="#centos7安装docker" class="headerlink" title="centos7安装docker"></a>centos7安装docker</h1><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#卸载系统之前的docker sudo yum remove docker \                  docker-client \                  docker-client-latest \                  docker-common \                  docker-latest \                  docker-latest-logrotate \                  docker-logrotate \                  docker-engine                  sudo yum install -y yum-utils# 配置镜像sudo yum-config-manager \    --add-repo \    https://download.docker.com/linux/centos/docker-ce.repo#安装docker    sudo yum install docker-ce docker-ce-cli containerd.io#启动docker服务sudo systemctl start docker #查看版本，是否安装成功docker -v#配置镜像加速sudo mkdir -p /etc/dockersudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'{  "registry-mirrors": ["https://g2i6jdnj.mirror.aliyuncs.com"]}EOF#重启服务sudo systemctl daemon-reloadsudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>postman打开时瞬间黑屏1s</title>
      <link href="/archives/8faf8cb1.html"/>
      <url>/archives/8faf8cb1.html</url>
      
        <content type="html"><![CDATA[<h1 id="postman打开时瞬间黑屏1s解决方案"><a href="#postman打开时瞬间黑屏1s解决方案" class="headerlink" title="postman打开时瞬间黑屏1s解决方案"></a>postman打开时瞬间黑屏1s解决方案</h1><ul><li><p>在环境变量中加入POSTMAN_DISABLE_GPU = true</p></li><li><p>重新打开postman</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wanghubcc/img/202108/16/23df65c69822793fa2750acd40308c.png" alt="在环境变量中加入POSTMAN_DISABLE_GPU = true"></p><p><img src="https://cdn.jsdelivr.net/gh/wanghubcc/img/202108/16/81c7db49cace5ed587ccba20262a9e.png" alt="重新打开postman"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 解决方案 </tag>
            
            <tag> postman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推送博客时出现错误解决方案</title>
      <link href="/archives/7a191711.html"/>
      <url>/archives/7a191711.html</url>
      
        <content type="html"><![CDATA[<h3 id="Failed-to-connect-to-github-com-port-443-Timed-out"><a href="#Failed-to-connect-to-github-com-port-443-Timed-out" class="headerlink" title="Failed to connect to github.com port 443: Timed out"></a>Failed to connect to github.com port 443: Timed out</h3><h5 id="在推送博客时出现错误如下：Failed-to-connect-to-github-com-port-443-Timed-out"><a href="#在推送博客时出现错误如下：Failed-to-connect-to-github-com-port-443-Timed-out" class="headerlink" title="在推送博客时出现错误如下：Failed to connect to github.com port 443: Timed out"></a>在推送博客时出现错误如下：Failed to connect to github.com port 443: Timed out</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Failed to connect to github.com port 443: Timed out<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决办法，执行如下命令（一般是挂代理引起的）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git config --global --unset http.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次推送</p><h3 id="OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="OpenSSL SSL_read: Connection was reset, errno 10054"></a>OpenSSL SSL_read: Connection was reset, errno 10054</h3><h5 id="出现错误：OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#出现错误：OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="出现错误：OpenSSL SSL_read: Connection was reset, errno 10054"></a>出现错误：OpenSSL SSL_read: Connection was reset, errno 10054</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">OpenSSL SSL_read: Connection was reset, errno 10054<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行命令，解除ssl验证（每次出现错误都需要重新执行）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git config --global http.sslVerify "false"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次推送</p><h3 id="The-requested-URL-returned-error-403"><a href="#The-requested-URL-returned-error-403" class="headerlink" title="The requested URL returned error: 403"></a>The requested URL returned error: 403</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">解决办法: 控制面板 -- &gt;  window 凭据 删除之前的就好了,再次上传时就会提示需要输入当前仓库的账号和密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 解决方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用chromedriver打印日志</title>
      <link href="/archives/dc2645ea.html"/>
      <url>/archives/dc2645ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用chromedriver打印日志"><a href="#使用chromedriver打印日志" class="headerlink" title="使用chromedriver打印日志"></a>使用chromedriver打印日志</h1><h3 id="打印日志，并获取响应状态码"><a href="#打印日志，并获取响应状态码" class="headerlink" title="打印日志，并获取响应状态码"></a>打印日志，并获取响应状态码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>wzq<span class="token punctuation">.</span>gbif</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Level</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span></span><span class="token class-name">ChromeDriver</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span></span><span class="token class-name">ChromeOptions</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogEntries</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogEntry</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LoggingPreferences</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>openqa<span class="token punctuation">.</span>selenium<span class="token punctuation">.</span>remote<span class="token punctuation">.</span></span><span class="token class-name">DesiredCapabilities</span><span class="token punctuation">;</span><span class="token comment">/** * @author wang * @version 1.0 * @date 2021/8/13 16:50 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test03</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">downloadPage</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">downloadPage</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">ChromeDriver</span> driver <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">ChromeOptions</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">DesiredCapabilities</span> cap <span class="token operator">=</span> <span class="token class-name">DesiredCapabilities</span><span class="token punctuation">.</span><span class="token function">chrome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cap<span class="token punctuation">.</span><span class="token function">setCapability</span><span class="token punctuation">(</span><span class="token class-name">ChromeOptions</span><span class="token punctuation">.</span>CAPABILITY<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">LoggingPreferences</span> logPrefs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoggingPreferences</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            logPrefs<span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token class-name">LogType</span><span class="token punctuation">.</span>PERFORMANCE<span class="token punctuation">,</span> <span class="token class-name">Level</span><span class="token punctuation">.</span>ALL<span class="token punctuation">)</span><span class="token punctuation">;</span>            options<span class="token punctuation">.</span><span class="token function">setCapability</span><span class="token punctuation">(</span><span class="token string">"goog:loggingPrefs"</span><span class="token punctuation">,</span> logPrefs<span class="token punctuation">)</span><span class="token punctuation">;</span>            driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeDriver</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// navigate to the page</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Navigate to "</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>            driver<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// and capture the last recorded url (it may be a redirect, or the</span>            <span class="token comment">// original url)</span>            <span class="token class-name">String</span> currentURL <span class="token operator">=</span> driver<span class="token punctuation">.</span><span class="token function">getCurrentUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">LogEntries</span> logs <span class="token operator">=</span> driver<span class="token punctuation">.</span><span class="token function">manage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"performance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> status <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"\\nList of log entries:\\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogEntry</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> logs<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">LogEntry</span> entry <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    <span class="token class-name">JSONObject</span> json <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">JSONObject</span> message <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">String</span> method <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"method"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"Network.responseReceived"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token class-name">JSONObject</span> params <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">"params"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name">JSONObject</span> response <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">"response"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token class-name">String</span> messageUrl <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentURL<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>messageUrl<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            status <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>messageUrl <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"headers: "</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"headers"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JSONException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">// TODO Auto-generated catch block</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"\nstatus code: "</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>driver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                driver<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="打印日志信息"><a href="#打印日志信息" class="headerlink" title="打印日志信息"></a>打印日志信息</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Navigate to https://www.baidu.com/\nList of log entries:\n{"webview":"4093F206401AE297E4EFF7BEE9AC3FD7","message":{"method":"Network.requestWillBeSent","params":{"request":{"headers":https://www.baidu.com/: 200headers: {"Transfer-Encoding":"chunked","Server":"BWS\/1.1","X-Ua-Compatible":"IE=Edge,chrome=1","Connection":"keep-alive","P3p":"CP=\" OTI DSP COR IVA OUR IND COM \"\nCP=\" OTI DSP COR IVA OUR IND COM \"","Date":"Fri, 13 Aug 2021 08:59:41 GMT","X-Frame-Options":"sameorigin","Strict-Transport-Security":"max-age=172800","Cache-Control":"private","Bdpagetype":"1","Content-Encoding":"gzip","Traceid":"162884518124046397549622976489859333826","Set-Cookie":"BAIDUID=F1C5FC92CC8A0F4C4BCC90CD65D5F92D:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2147483647; path=\/; domain=.baidu.com\nBIDUPSID=F1C5FC92CC8A0F4C4BCC90CD65D5F92D; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2147483647; path=\/; domain=.baidu.com\nPSTM=1628845181; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2147483647; path=\/; domain=.baidu.com\nBAIDUID=F1C5FC92CC8A0F4C11A03438D50332A3:FG=1; max-age=31536000; expires=Sat, 13-Aug-22 08:59:41 GMT; domain=.baidu.com; path=\/; version=1; comment=bd\nBDSVRTM=0; path=\/\nBD_HOME=1; path=\/\nH_PS_PSSID=34334_34369_31660_34404_34004_34092_34106_34111_26350_34422_22158_34390; path=\/; domain=.baidu.com","Bdqid":"0x858bae2200003ec2","Expires":"Fri, 13 Aug 2021 08:59:20 GMT","Content-Type":"text\/html;charset=utf-8"}…………status code: 200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 信息采集 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
